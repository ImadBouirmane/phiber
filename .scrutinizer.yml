checks:
    php:
        code_rating: true
filter:
    excluded_paths:
        - Tests
tools:
    external_code_coverage: true
    php_cs_fixer:
        config:
            level: custom
            fixers: { indentation: true, linefeed: true, trailing_spaces: true, unused_use: true, visibility: true, return: true, short_tag: true, braces: true, elseif: true }
    php_analyzer:
        config:
            parameter_reference_check: { enabled: true }
            checkstyle: { enabled: true, no_trailing_whitespace: true, naming: { enabled: false, local_variable: '^[a-z][a-zA-Z0-9]*$', abstract_class_name: ^Abstract|Factory$, utility_class_name: 'Utils?$', constant_name: '^[A-Z][A-Z0-9]*(?:_[A-Z0-9]+)*$', property_name: '^[a-z][a-zA-Z0-9]*$', method_name: '^(?:[a-z]|__)[a-zA-Z0-9]*$', parameter_name: '^[a-z][a-zA-Z0-9]*$', interface_name: '^[A-Z][a-zA-Z0-9]*Interface$', type_name: '^[A-Z][a-zA-Z0-9]*$', exception_name: '^[A-Z][a-zA-Z0-9]*Exception$', isser_method_name: '^(?:is|has|should|may|supports)' } }
            unreachable_code: { enabled: false }
            check_access_control: { enabled: false }
            typo_checks: { enabled: true }
            check_variables: { enabled: false }
            check_calls: { enabled: true, too_many_arguments: false, missing_argument: true, argument_type_checks: lenient }
            suspicious_code: { enabled: true, overriding_parameter: true, overriding_closure_use: true, parameter_closure_use_conflict: true, parameter_multiple_times: true, non_existent_class_in_instanceof_check: true, non_existent_class_in_catch_clause: true, assignment_of_null_return: true, non_commented_switch_fallthrough: true, non_commented_empty_catch_block: true, overriding_private_members: true, use_statement_alias_conflict: true, precedence_in_condition_assignment: true }
            dead_assignments: { enabled: true }
            verify_php_doc_comments: { enabled: false, parameters: false, return: false, suggest_more_specific_types: false, ask_for_return_if_not_inferrable: false, ask_for_param_type_annotation: false }
            loops_must_use_braces: { enabled: true }
            check_usage_context: { enabled: true, foreach: { value_as_reference: true, traversable: true } }
            simplify_boolean_return: { enabled: false }
            phpunit_checks: { enabled: false }
            reflection_checks: { enabled: false }
            precedence_checks: { enabled: true, assignment_in_condition: false, comparison_of_bit_result: true }
            basic_semantic_checks: { enabled: true }
            unused_code: { enabled: false }
            deprecation_checks: { enabled: true }
            useless_function_calls: { enabled: true }
            metrics_lack_of_cohesion_methods: { enabled: true }
            metrics_coupling: { enabled: true, stable_code: { namespace_prefixes: {  }, classes: {  } } }
            doctrine_parameter_binding: { enabled: false }
            doctrine_entity_manager_injection: { enabled: false }
            symfony_request_injection: { enabled: false }
            doc_comment_fixes: { enabled: false }
            reflection_fixes: { enabled: false }
            use_statement_fixes: { enabled: true, remove_unused: false, preserve_multiple: false, preserve_blanklines: false, order_alphabetically: false }
    sensiolabs_security_checker: true